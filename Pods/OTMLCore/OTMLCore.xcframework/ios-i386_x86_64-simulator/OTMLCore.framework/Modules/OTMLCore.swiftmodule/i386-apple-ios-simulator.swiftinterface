// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 effective-4.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target i386-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name OTMLCore
import Foundation
@_exported import OTMLCore
import Swift
import UIKit
import _Concurrency
import os.log
import os
@_inheritsConvenienceInitializers @objc(CryptoExportImportManager) open class CryptoExportImportManager : ObjectiveC.NSObject {
  @objc public func importPublicKeyReferenceFromDERCertificate(_ certData: Foundation.Data) -> Security.SecKey?
  @objc public func exportPublicKeyToDER(_ rawPublicKeyBytes: Foundation.Data, keyType: Swift.String, keySize: Swift.Int) -> Foundation.Data?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(IsoCountryInfoObj) public class IsoCountryInfoObj : ObjectiveC.NSObject {
  @objc public var name: Swift.String
  @objc public var numeric: Swift.String
  @objc public var alpha2: Swift.String
  @objc public var alpha3: Swift.String
  @objc public var calling: Swift.String
  @objc public var currency: Swift.String
  @objc public var continent: Swift.String
  @objc public var flag: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(IsoCountryCodes) public class IsoCountryCodes : ObjectiveC.NSObject {
  @objc public class func searchByCallingCode(_ calllingCode: Swift.String) -> OTMLCore.IsoCountryInfoObj?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class OTOSLogger : ObjectiveC.NSObject {
  @objc public static func processLogData(_ data: Foundation.NSData, level: Swift.Int)
  @objc override dynamic public init()
  @objc deinit
}
